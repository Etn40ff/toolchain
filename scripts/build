#!/usr/bin/env bash

set -e
source "${BASH_SOURCE%/*}"/lib

usage="$0 [OPTION]... IMAGESDIR [VERSION]

Build the Docker images under the IMAGESDIR directory.
Label each built image with the given VERSION number (default: latest).
The build takes advantage of any reusable layer from previously built images.

Options:

    -h              Show this help message.
    -p              Publish each built image to the GitHub Container Registry
                    (you need to be logged in to ghcr.io with the appropriate
                    permissions for this to work)."

helpflag=
publishflag=

while getopts hp name; do
    case $name in
        h) helpflag=1 ;;
        p) publishflag=1 ;;
        *) error "Invalid option. Use the -h flag for more information." ;;
    esac
done

shift $((OPTIND - 1))

if [[ -n $helpflag ]]; then
    echo "$usage"
    exit
fi

if [[ $# -eq 0 ]]; then
    error "Missing IMAGESDIR arguments. Use the -h flag for more information."
fi

if [[ $# -gt 2 ]]; then
    error "Extraneous arguments. Use the -h flag for more information."
fi

imagesdir="$1"
version="$2"

# Enable BuildKit for better cache behavior
# See <https://docs.docker.com/engine/reference/builder/#buildkit>
export DOCKER_BUILDKIT=1

docker-build() {
    tag="$(image-name "$1" "$version")"
    status "Building image '$tag'"
    docker image build \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        --build-arg BASE="$(image-name base "$version")" \
        --cache-from "$(image-name "$1")" \
        --tag "$tag" .

    if [[ -n $publishflag ]]; then
        docker image push "$tag"
    fi
}

pushd "$imagesdir"/base
docker-build base
popd

for imagepath in "$imagesdir"/*; do
    if [[ -d $imagepath ]] && [[ -f $imagepath/Dockerfile ]]; then
        imagename="$(basename "$imagepath")"

        if [[ $imagename != base ]]; then
            pushd "$imagepath"
            docker-build "$imagename"
            popd
        fi
    fi
done

status "Done"
